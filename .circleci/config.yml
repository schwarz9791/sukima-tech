# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
default: &default
  docker:
    - image: circleci/node:10.12.0-stretch-browsers-legacy
  working_directory: ~/repo

jobs:
  install:
    <<: *default
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: ~/repo
          paths:
            - ./*

  # test:
  #   <<: *default

  # steps:
  #   - attach_workspace:
  #       at: ~/repo
  # run tests!
  #   - run: yarn test

  deploy-staging:
    <<: *default
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Generate Nuxt app
          command: yarn generate
      - run:
          name: Use staging to Firebase
          command: ./node_modules/.bin/firebase use stg
      - run:
          name: Deploy Staging to Firebase
          command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN

  deploy-production:
    <<: *default
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Generate Nuxt app
          command: yarn generate:prod

      - run:
          name: Use production to Firebase
          command: ./node_modules/.bin/firebase use prod

      - run:
          name: Deploy Production to Firebase
          command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN

workflows:
  version: 2
  build-deploy:
    jobs:
      - install
      # - test:
      #     requires:
      #       - build
      - deploy-staging:
          requires:
            - install
          filters:
            branches:
              only: staging
      - deploy-production:
          requires:
            - install
          filters:
            branches:
              only: master
